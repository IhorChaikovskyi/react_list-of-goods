{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","getReorderedGoods","goods","sortType","isReversed","visibleGoods","sort","g1","g2","ALPHABET","localeCompare","LENGTH","length","reverse","console","log","App","state","NONE","sortAlphabet","setState","sortLength","reversedMethod","resetMethod","this","className","type","onClick","undefined","map","good","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAiBKA,E,wFAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAeK,SAASC,EACdC,EADK,GAGJ,IADCC,EACF,EADEA,SAAUC,EACZ,EADYA,WAGNC,EAAY,YAAOH,GAqBzB,OAnBAG,EAAaC,MAAK,SAACC,EAAIC,GACrB,OAAQL,GACN,KAAKJ,EAASU,SACZ,OAAOF,EAAGG,cAAcF,GAC1B,KAAKT,EAASY,OACZ,OAAOJ,EAAGK,OAASJ,EAAGI,OAExB,QACE,OAAO,MAITR,GACFC,EAAaQ,UAIfC,QAAQC,IAAIZ,EAAUC,GAEfC,G,SAtCJN,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KA8CE,IAAMiB,EAAb,4MACEC,MAAQ,CACNb,YAAY,EACZD,SAAUJ,EAASmB,MAHvB,EAMEC,aAAe,WACb,EAAKC,SAAS,CAAEjB,SAAUJ,EAASU,YAPvC,EAUEY,WAAa,WACX,EAAKD,SAAS,CAAEjB,SAAUJ,EAASY,UAXvC,EAcEW,eAAiB,WACf,EAAKF,UAAS,SAAAH,GAAK,MAAK,CAAEb,YAAaa,EAAMb,gBAfjD,EAkBEmB,YAAc,WACZ,EAAKH,SAAS,CAAEhB,YAAY,EAAOD,SAAUJ,EAASmB,QAnB1D,4CAsBE,WACE,MAAiCM,KAAKP,MAA9Bb,EAAR,EAAQA,WAAYD,EAApB,EAAoBA,SAEpB,OACE,sBAAKsB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAS,uEAGLtB,IAAaJ,EAASU,SAAW,GAAK,YAC1CkB,QAASH,KAAKL,aANhB,iCAWA,wBACEO,KAAK,SACLD,UAAS,uEAGLtB,IAAaJ,EAASY,OAAS,GAAK,YACxCgB,QAASH,KAAKH,WANhB,4BAWA,wBACEK,KAAK,SACLD,UAAS,wEAGJrB,GAAc,YACnBuB,QAASH,KAAKF,eANhB,qBAWClB,GAAcD,IAAaJ,EAASmB,KAEjC,wBACEQ,KAAK,SACLD,UAAS,iHAILrB,GAAcD,IAAaJ,EAASmB,KAAO,GAAK,cAJ3C,sBAMTS,QAASH,KAAKD,YARhB,wBAYEK,KAGR,6BAEI3B,EACED,EACA,CAAEG,WAAUC,eACZyB,KAAI,SAAAC,GAAI,OACR,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,eApFtC,GAAyBC,IAAMC,WC5D/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.b92ee2cd.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\n// Use this function in the render method to prepare goods\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  // To avoid the original array mutation\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((g1, g2) => {\n    switch (sortType) {\n      case SortType.ALPHABET:\n        return g1.localeCompare(g2);\n      case SortType.LENGTH:\n        return g1.length - g2.length;\n\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  // eslint-disable-next-line no-console\n  console.log(sortType, isReversed);\n\n  return visibleGoods;\n}\n\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  sortAlphabet = () => {\n    this.setState({ sortType: SortType.ALPHABET });\n  };\n\n  sortLength = () => {\n    this.setState({ sortType: SortType.LENGTH });\n  };\n\n  reversedMethod = () => {\n    this.setState(state => ({ isReversed: !state.isReversed }));\n  };\n\n  resetMethod = () => {\n    this.setState({ isReversed: false, sortType: SortType.NONE });\n  };\n\n  render(): React.ReactNode {\n    const { isReversed, sortType } = this.state;\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={`\n              button\n              is-info\n              ${sortType === SortType.ALPHABET ? '' : 'is-light'}`}\n            onClick={this.sortAlphabet}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={`\n              button\n              is-info\n              ${sortType === SortType.LENGTH ? '' : 'is-light'}`}\n            onClick={this.sortLength}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={`\n              button\n              is-info\n              ${!isReversed && 'is-light'}`}\n            onClick={this.reversedMethod}\n          >\n            Reverse\n          </button>\n\n          {isReversed || sortType !== SortType.NONE\n            ? (\n              <button\n                type=\"button\"\n                className={`\n                  button\n                  is-danger\n                  is-light\n                  ${isReversed || sortType !== SortType.NONE ? '' : 'displayNone'}\n                `}\n                onClick={this.resetMethod}\n              >\n                Reset\n              </button>\n            ) : undefined}\n        </div>\n\n        <ul>\n          {\n            getReorderedGoods(\n              goodsFromServer,\n              { sortType, isReversed },\n            ).map(good => (\n              <li data-cy=\"Good\" key={good}>\n                {good}\n              </li>\n            ))\n          }\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}